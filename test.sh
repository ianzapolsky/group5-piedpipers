#!/bin/bash

#############################################################################################
#
# bash script to automate testing for Piedpipers solutions.
# by Ian Zapolsky
#
# INSTRUCTIONS:
# set the PIPERS, RATS, PLAYER, and FIELDSIZE variables to specify test parameters.
# set the NUMTESTS variable to specify the number of test runs.
# seed value is generated by the built-in Bash pseudorandom number generator
#
#############################################################################################

PIPERS=2
RATS=50
PLAYER="group5"
FIELDSIZE=500

NUMTESTS=100

totalticks=0

for i in `seq 1 $NUMTESTS`;
do

  echo "executing test "$i":"
 
  random=$RANDOM
  
  output="$(java piedpipers.sim.Piedpipers $PLAYER $PIPERS $RATS false $random $FIELDSIZE 2>&1 )"
  ticks="$(echo $output | awk '{print $(NF-1)}' )"

  if [[ $ticks =~ ^[0-9]+$ ]]; then
    totalticks="$((totalticks+ticks))"
    echo "finished in "$ticks" ticks for seed = "$random"\n"
  else
    echo "test timed out\n"
    NUMTESTS=$((NUMTESTS-1))
  fi

done

echo "average ticks per test out of "$NUMTESTS" successful tests: "$((totalticks/NUMTESTS))
